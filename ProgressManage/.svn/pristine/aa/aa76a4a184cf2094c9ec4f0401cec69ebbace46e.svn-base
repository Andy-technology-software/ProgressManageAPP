//
//  SalesViewController.m
//  ProgressManage
//
//  Created by Gem on 2017/5/4.
//  Copyright © 2017年 xurenqinag. All rights reserved.
//

#import "SalesViewController.h"
#import "WJDropdownMenu.h"
#import "SalesModel.h"
#import "SalesTableViewCell.h"
#import "PYSearch.h"
#import "IncreaseViewController.h"
#import "SaleDetailViewController.h"
@interface SalesViewController ()<UITableViewDataSource,UITableViewDelegate,WJMenuDelegate,PYSearchViewControllerDelegate>{
    UITableView* _tableView;
    NSInteger selectIndex;
    NSMutableArray *popTitleArr;
    UIButton *selesetBtn;
    NSMutableArray *idData;
    UIImageView *flag;
}
@property (nonatomic,assign) NSInteger pageIndex;
@property (nonatomic,strong) NSMutableArray *dataSource;
@property (nonatomic, assign) CGRect         screenRect;
@property (nonatomic, strong) UIWindow       *window;
@property (nonatomic, strong) UIView         *dimBackground;
@property (nonatomic,strong)WJDropdownMenu *dropMenu;

@end

@implementation SalesViewController

- (void)viewDidLoad {
    [super viewDidLoad];
    self.view.backgroundColor = [MyController colorWithHexString:@"f9fafb"];

    selectIndex = 0;
    self.pageIndex = 1;
    self.dataSource = [NSMutableArray array];
    for (int i = 0; i < 10; i ++) {
        SalesModel *model = [[SalesModel alloc] init];
        model.title = @"进销存项目";
        model.time = @"2017-5-8";
        model.percent = 0.5;
        model.state = @"交付管理";
        model.customer = @"东方机械";
        model.money = @"¥888888.88";
        [self.dataSource addObject:model];
    }
    popTitleArr = [NSMutableArray arrayWithObjects:@"销售",@"001",@"002", nil];
    selesetBtn = [MyController createButtonWithFrame:CGRectMake(80, 0, SCREEN_WIDTH - 160, 44) ImageName:nil Target:self Action:@selector(popAction:) Title:popTitleArr[0]];
    selesetBtn.backgroundColor = [UIColor clearColor];
    [selesetBtn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
    UIImageView *pushImage = [MyController createImageViewWithFrame:CGRectMake(selesetBtn.width / 2 + 20, selesetBtn.center.y - 8, 16, 16) ImageName:@"销售-顶部下拉"];
    [selesetBtn addSubview:pushImage];
    self.navigationItem.titleView = selesetBtn;
    flag = [MyController createImageViewWithFrame:CGRectMake([MyController getScreenWidth] / 2 - 5, 23, 10, 10) ImageName:@"展开"];
    flag.transform = CGAffineTransformMakeRotation( M_PI / 2);
    [self.view addSubview:flag];
    [self createTableView];
    [self createDropMenue];
    [self createRightBtn];

}
- (void)createRightBtn{
    UIButton *addSalesBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [addSalesBtn addTarget:self action:@selector(addSalesAction:) forControlEvents:UIControlEventTouchUpInside];
    [addSalesBtn setImage:[UIImage imageNamed:@"添加"] forState:UIControlStateNormal];
    [addSalesBtn setImage:[UIImage imageNamed:@"添加-触发"] forState:UIControlStateHighlighted];
    [addSalesBtn sizeToFit];
    UIBarButtonItem *addSalesItem = [[UIBarButtonItem alloc] initWithCustomView:addSalesBtn];
    
    
    UIBarButtonItem *fixedSpaceBarButtonItem = [[UIBarButtonItem alloc] initWithBarButtonSystemItem:UIBarButtonSystemItemFixedSpace target:nil action:nil];
    fixedSpaceBarButtonItem.width = 15;
    
    
    UIButton *searchBtn = [UIButton buttonWithType:UIButtonTypeCustom];
    [searchBtn addTarget:self action:@selector(searchAction:) forControlEvents:UIControlEventTouchUpInside];
    [searchBtn setImage:[UIImage imageNamed:@"搜索"] forState:UIControlStateNormal];
    [searchBtn setImage:[UIImage imageNamed:@"搜索-触发"] forState:UIControlStateHighlighted];
    [searchBtn sizeToFit];
    UIBarButtonItem *searchItem = [[UIBarButtonItem alloc] initWithCustomView:searchBtn];
    self.navigationItem.rightBarButtonItems  = @[searchItem,fixedSpaceBarButtonItem,addSalesItem];
}
#pragma mark - 添加
- (void)addSalesAction:(UIButton *)btn{
    [self.navigationController pushViewController:[[IncreaseViewController alloc] init] animated:YES];
}
#pragma mark - 搜索
- (void)searchAction:(UIButton *)btn{
    
    // 1. 创建热门搜索
    NSArray *hotSeaches = @[];
    // 2. 创建控制器
    PYSearchViewController *searchViewController = [PYSearchViewController searchViewControllerWithHotSearches:hotSeaches searchBarPlaceholder:NSLocalizedString(@"搜索", @"搜索") didSearchBlock:^(PYSearchViewController *searchViewController, UISearchBar *searchBar, NSString *searchText) {
        // 开始搜索执行以下代码
        // 如：跳转到指定控制器
        //        [searchViewController.navigationController pushViewController:[[SearchViewController alloc] init] animated:YES];
    }];
    
    searchViewController.searchHistoryStyle = PYHotSearchStyleDefault; // 搜索历史风格为default
    searchViewController.hotSearchStyle = PYHotSearchStyleDefault; // 热门搜索风格为默认
    
    // 4. 设置代理
    searchViewController.delegate = self;
    // 5. 跳转到搜索控制器
    UINavigationController *nav = [[UINavigationController alloc] initWithRootViewController:searchViewController];
    [self presentViewController:nav animated:NO completion:nil];
    
    
}
#pragma mark - PYSearchViewControllerDelegate
- (void)searchViewController:(PYSearchViewController *)searchViewController searchTextDidChange:(UISearchBar *)seachBar searchText:(NSString *)searchText
{
    if (searchText.length) { // 与搜索条件再搜索
        
        // 显示建议搜索结果
        NSMutableArray *searchSuggestionsM = [NSMutableArray array];
        NSPredicate *namePredicate = [NSPredicate predicateWithFormat:@"name CONTAINS[c] %@ ",searchText];
        NSPredicate *phonePredicate = [NSPredicate predicateWithFormat:@"phone CONTAINS[c] %@ ",searchText];
        
        for (SalesModel *model in self.dataSource) {
//            if ([namePredicate evaluateWithObject:model] || [phonePredicate evaluateWithObject:model]) {
//                NSLog(@"%@",model.name);
//                if ([model.type isEqualToString:@"2"]) {
                    [searchSuggestionsM addObject:model];
//                }
//            }
        }
        searchViewController.searchSuggestions = searchSuggestionsM;
        
    }
}

- (void)popAction:(UIButton *)btn{
    flag.transform = CGAffineTransformMakeRotation( M_PI  * 3 / 2);
    [self createPopView];
}
#pragma mark -导航视图
#pragma mark - 创建弹出视图
- (void)createPopView{
    
    self.dimBackground = [[UIView alloc] initWithFrame:CGRectMake(0 , 0, [MyController getScreenWidth], [MyController getScreenHeight])];
    UITapGestureRecognizer *gr = [[UITapGestureRecognizer alloc] initWithTarget:self action:@selector(dismiss)];
    [_dimBackground addGestureRecognizer:gr];
    UIView *view = [[UIView alloc] initWithFrame:CGRectMake(0, [MyController isIOS7], [MyController getScreenWidth], 44 * popTitleArr.count)];
    view.backgroundColor = [MyController colorWithHexString:@"f9fafb"];
    [self.dimBackground addSubview:view];
    for (int i = 0; i < popTitleArr.count; i ++) {
        UIButton *btn = [MyController createButtonWithFrame:CGRectMake(0, 44 * i, [MyController getScreenWidth], 44) ImageName:nil Target:self Action:@selector(selectedAction:) Title:popTitleArr[i]];
        [btn setTitleColor:[UIColor blackColor] forState:UIControlStateNormal];
        btn.titleLabel.font = [UIFont systemFontOfSize:14];
        btn.tag = i + 10;
        [view addSubview:btn];
        
        UIView *line = [[UIView alloc] initWithFrame:CGRectZero];
        line.frame =  CGRectMake(15, (i + 1)* 44 - 0.5, [MyController getScreenWidth] - 30, 0.5);
        line.backgroundColor = [MyController colorWithHexString:@"eeeeee"];
        [view addSubview:line];
    }
    if (self.window == nil) {
        [self show];
    }
}
#pragma mark - 显示遮盖视图
- (void)show {
    self.window = [[UIWindow alloc] initWithFrame:CGRectMake(0, 0, [MyController getScreenWidth], [MyController getScreenHeight])];
    self.window.windowLevel = UIWindowLevelAlert;
    self.window.backgroundColor = [UIColor clearColor];
    self.window.rootViewController = [UIViewController new];
    self.window.rootViewController.view.backgroundColor = [UIColor clearColor];
    [self.window.rootViewController.view addSubview:self.dimBackground];
    self.window.hidden = NO;
    [UIView animateWithDuration:0.2 animations:^{
        self.dimBackground.backgroundColor = [UIColor colorWithWhite:0.0 alpha:0.2];
    } completion:^(BOOL finished) {
    }];
}
#pragma mark - 移除遮盖视图
- (void)dismiss {
    flag.transform = CGAffineTransformMakeRotation( M_PI / 2);
    [UIView animateWithDuration:0.2 animations:^{
        self.dimBackground.backgroundColor = [UIColor clearColor];
        [self.dimBackground.subviews makeObjectsPerformSelector:@selector(removeFromSuperview)];
    } completion:^(BOOL finished) {
        self.window = nil;
    }];
}
- (void)selectedAction:(UIButton *)btn{
    flag.transform = CGAffineTransformMakeRotation( M_PI / 2);
    NSLog(@"selected: %ld",btn.tag - 10);
    NSInteger index = btn.tag - 10;
    [self dismiss];
    [selesetBtn setTitle:popTitleArr[index] forState:UIControlStateNormal];
    selectIndex = index;
    self.pageIndex = 1;
    [self.dataSource removeAllObjects];
    
}

#pragma marl - 菜单视图
- (void)createDropMenue{
    // 创建menu
    self.dropMenu = [[WJDropdownMenu alloc]initWithFrame:CGRectMake(0, [MyController isIOS7], SCREEN_WIDTH, 40)];
    self.dropMenu.backgroundColor = [UIColor clearColor];
    self.dropMenu.delegate = self;         //  设置代理
    [self.view addSubview:self.dropMenu];
 
    // 设置属性(可不设置)
    self.dropMenu.caverAnimationTime = 0.2;//  增加了遮盖层动画时间设置   不设置默认是  0.15
    self.dropMenu.unSelectedColor = [MyController colorWithHexString:@"81889d"];
    self.dropMenu.menuTitleFont = 12;      //  设置menuTitle字体大小    不设置默认是  11
    self.dropMenu.tableTitleFont = 12;     //  设置tableTitle字体大小   不设置默认是  10
    self.dropMenu.cellHeight = 40;         //  设置tableViewcell高度   不设置默认是  40
    self.dropMenu.menuArrowStyle = menuArrowStyleHollow; // 旋转箭头的样式(空心箭头 or 实心箭头)
    self.dropMenu.tableViewMaxHeight = 200; // tableView的最大高度(超过此高度就可以滑动显示)
    self.dropMenu.CarverViewColor = [UIColor colorWithRed:0.5 green:0.5 blue:0.5 alpha:0.5];//设置遮罩层颜色

    // 第一种方法一次性导入所有菜单数据
    [self createAllMenuData];

}

- (void)createAllMenuData{
    NSArray *startMenuTitle = @[@"全部客户",@"全部状态"];
    //  创建第一个菜单的first数据second数据
    NSArray *firstArr = [NSArray arrayWithObjects:@"001",@"002",@"003" ,nil];
    NSArray *firstMenu = [NSArray arrayWithObject:firstArr];
    
    //  创建第二个菜单的first数据second数据
    NSArray *secondArr = [NSArray arrayWithObjects:@"100",@"200",@"300" ,nil];
    NSArray *secondMenu = [NSArray arrayWithObjects:secondArr, nil];
    
    [self.dropMenu createTwoMenuTitleArray:startMenuTitle FirstArr:firstMenu SecondArr:secondMenu];
}

- (void)hideMenu{
    //  点击收缩menu
    [self.dropMenu drawBackMenu];
}

#pragma mark -- 代理方法返回点击时对应的index

- (void)menuCellDidSelected:(NSInteger)MenuTitleIndex firstIndex:(NSInteger)firstIndex andSecondIndex:(NSInteger)secondIndex{
    if (0 == MenuTitleIndex) {
        
    }else if (1 == MenuTitleIndex){
        
    }
   
}


#pragma mark - 初始化tableView
- (void)createTableView{
    self.automaticallyAdjustsScrollViewInsets = NO;
    _tableView = [[UITableView alloc] initWithFrame:CGRectMake(10, [MyController isIOS7] + 40, SCREEN_WIDTH - 20, [MyController getScreenHeight] - 40  - [MyController isIOS7]) style:UITableViewStylePlain];
    _tableView.dataSource = self;
    _tableView.delegate = self;
   _tableView.backgroundColor = [MyController colorWithHexString:@"f9fafb"];
    //分割线类型
    _tableView.separatorStyle = UITableViewCellSeparatorStyleNone;
    _tableView.showsVerticalScrollIndicator = NO;
    _tableView.mj_header = [MJRefreshNormalHeader headerWithRefreshingBlock:^{
        [self headerRefresh];
    }];
    _tableView.mj_footer = [MJRefreshAutoNormalFooter footerWithRefreshingBlock:^{
        [self footerRefresh];
    }];
    [self.view addSubview:_tableView];
    
    
}
#pragma mark - 刷新
- (void)headerRefresh{
    NSLog(@"下拉");
    self.pageIndex = 1;
}
- (void)footerRefresh{
    NSLog(@"上拉");
    self.pageIndex ++;
    
}
#pragma mark - tableView行数
- (NSInteger)tableView:(UITableView *)tableView numberOfRowsInSection:(NSInteger)section{
    
    return self.dataSource.count;
}
- (NSInteger)numberOfSectionsInTableView:(UITableView *)tableView{
    return 1;
}
#pragma mark - tableVie点击cell
- (void)tableView:(UITableView *)tableView didSelectRowAtIndexPath:(NSIndexPath *)indexPath{
    SaleDetailViewController *vc = [[SaleDetailViewController alloc] init];
    [self.navigationController pushViewController:vc animated:YES];
}
#pragma mark - 自定义tableView
- (UITableViewCell*)tableView:(UITableView *)tableView cellForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    SalesTableViewCell* cell = [tableView dequeueReusableCellWithIdentifier:@"ID"];
    if (!cell) {
        cell = [[SalesTableViewCell alloc] initWithStyle:UITableViewCellStyleDefault reuseIdentifier:@"ID"];
    }
    cell.selectionStyle = UITableViewCellSelectionStyleNone;
    SalesModel* model = self.dataSource[indexPath.row];
    [cell setModel:model];
    return cell;
    
}
#pragma mark - tableView行高
- (CGFloat)tableView:(UITableView *)tableView heightForRowAtIndexPath:(NSIndexPath *)indexPath{
    
    return 130;
}


-(BOOL)tableView:(UITableView *)tableView canEditRowAtIndexPath:(NSIndexPath *)indexPath{
    return YES;
}

- (NSArray *)tableView:(UITableView *)tableView editActionsForRowAtIndexPath:(NSIndexPath *)indexPath{
        
        //添加一个删除按钮
        UITableViewRowAction *deleteAction = [UITableViewRowAction rowActionWithStyle:(UITableViewRowActionStyleDestructive) title:@"            " handler:^(UITableViewRowAction *action, NSIndexPath *indexPath) {
            NSLog(@"点击了删除");
            
            SalesModel *model = [self.dataSource objectAtIndex:indexPath.row];
            [self.dataSource removeObjectAtIndex:indexPath.row];
            [_tableView deleteRowsAtIndexPaths:[NSArray arrayWithObject:indexPath] withRowAnimation:UITableViewRowAnimationFade];
            
            
        }];
        //删除按钮颜色
//        deleteAction.backgroundColor = [UIColor whiteColor];
//        deleteAction.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"销售-删除1"]];
        UITableViewRowAction *editorAction =[UITableViewRowAction rowActionWithStyle:(UITableViewRowActionStyleNormal) title:@"                 " handler:^(UITableViewRowAction *action, NSIndexPath *indexPath) {
            NSLog(@"点击了编辑");
            
        }];
       
//        editorAction.backgroundColor = [UIColor whiteColor];
//        editorAction.backgroundColor = [UIColor colorWithPatternImage:[UIImage imageNamed:@"销售-编辑1"]];

        //--------更多
        
        //将设置好的按钮方到数组中返回
        return @[deleteAction,editorAction];
        
}

@end
